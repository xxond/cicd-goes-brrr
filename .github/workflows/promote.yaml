name: prod-promote

on:
  push:
    tags: ["v*.*.*"]

permissions:
  contents: read
  packages: write

env:
  REPO: ghcr.io/${{ github.repository }}

concurrency:
  group: prod-${{ github.ref }}
  cancel-in-progress: false

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse semver & short SHA
        id: meta
        shell: bash
        run: |
          echo "semver=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          echo "short_sha=${GITHUB_SHA::7}"   >> $GITHUB_OUTPUT

      - name: Verify tag commit is on main (safety gate)
        shell: bash
        run: |
          git fetch origin main --quiet
          if ! git merge-base --is-ancestor $GITHUB_SHA origin/main; then
            echo "❌ Tag $GITHUB_REF_NAME is not on main. Aborting promote."; exit 1
          fi
          echo "✅ Tag commit is on main."

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Ensure source sha image exists
        shell: bash
        run: |
          docker buildx imagetools inspect ${{ env.REPO }}:sha-${{ steps.meta.outputs.short_sha }} > /dev/null

      - name: Promote by retagging (no rebuild)
        shell: bash
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REPO }}:v${{ steps.meta.outputs.semver }} \
            --tag ${{ env.REPO }}:latest \
            ${{ env.REPO }}:sha-${{ steps.meta.outputs.short_sha }}

      - name: Show resulting tags
        run: |
          docker buildx imagetools inspect ${{ env.REPO }}:v${{ steps.meta.outputs.semver }}
          docker buildx imagetools inspect ${{ env.REPO }}:latest

  # Optional: deploy to PROD using :1.2.3
  # deploy_prod:
  #   needs: promote
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to PROD
  #       run: |
  #         echo "Do your prod deploy here (e.g., kubectl set image, helm upgrade, etc)."
